#include <iostream>
#include <set> // Подключаем библиотеку для работы с множествами
#include <map> // Подключаем библиотеку для работы с ассоциативными массивами

// Функция для получения цифр из числа
std::set<int> single_digits(int num) { // Объявляем функцию, которая принимает целое число и возвращает множество цифр
    std::set<int> digits; // Создаем множество для хранения цифр
    while (num > 0) { // Пока число больше нуля
        digits.insert(num % 10); // вставляем в множество последнюю цифру числа
        num /= 10; // Удаляем последнюю цифру из числа
    }
    return digits; // Возвращаем множество цифр
}


int main() { 
    std::map<int, int> digitCount; // Создаем ассоциативный массив для подсчета количества каждой цифры
    std::set<int> twoDigitNums; // Создаем множество для хранения цифр, которые встречаются в двузначных числах

    int num; // Объявляем переменную для хранения вводимых чисел
    std::cout << "Введите последовательность чисел, закончив нулем: "; // Выводим приглашение для ввода
    while (std::cin >> num && num != 0) { // Считываем числа, пока не встретим ноль
        std::set<int> digits = single_digits(num); // Получаем цифры текущего числа
        for (int digit : digits) { // Для каждой цифры
            digitCount[digit]++; // Увеличиваем счетчик этой цифры
            if (num >= 10 && num <= 99) { // Если число двузначное
                twoDigitNums.insert(digit); // Добавляем его цифры в множество
            }
        }
    }

    std::cout << "Цифры, которые не встречаются в двухзначных числах: "; 
    for (const auto& pair : digitCount) { // Для каждой пары (цифра, количество) в ассоциативном массиве
        if (twoDigitNums.count(pair.first) == 0) { // Если цифра не встречается в двузначных числах
            std::cout << pair.first << " "; // Выводим эту цифру
        }
    }

    return 0; 
}
